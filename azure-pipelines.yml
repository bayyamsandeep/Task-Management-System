trigger:
  branches:
    include:
      - main

variables:
  imageTag: '$(Build.BuildId)'
  acrName: '<YOUR_ACR_NAME>' # TODO: Replace with your actual ACR name

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build Docker Images'
  jobs:
    - job: BuildAndPush
      displayName: 'Build and Push Backend, Frontend, and Consumer'
      steps:
        - checkout: self

        - task: Docker@2
          displayName: 'Login to ACR'
          inputs:
            command: login
            containerRegistry: 'ACRConnection'

        - task: Docker@2
          displayName: 'Build & Push Backend'
          inputs:
            command: buildAndPush
            repository: '$(acrName).azurecr.io/backend'
            dockerfile: 'backend/Dockerfile'
            tags: |
              $(imageTag)
            containerRegistry: 'ACRConnection'

        - task: Docker@2
          displayName: 'Build & Push Frontend'
          inputs:
            command: buildAndPush
            repository: '$(acrName).azurecr.io/frontend'
            dockerfile: 'frontend/Dockerfile'
            tags: |
              $(imageTag)
            containerRegistry: 'ACRConnection'

        # Optional: Build & Push Consumer if needed
        # - task: Docker@2
        #   displayName: 'Build & Push Consumer'
        #   inputs:
        #     command: buildAndPush
        #     repository: '$(acrName).azurecr.io/consumer'
        #     dockerfile: 'consumer/Dockerfile'
        #     tags: |
        #       $(imageTag)
        #     containerRegistry: 'ACRConnection'

- stage: DeployToAKS
  displayName: 'Deploy to AKS'
  dependsOn: Build
  jobs:
    - deployment: Deploy
      displayName: 'Deploy to AKS'
      environment: 'aks'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: KubernetesManifest@0
                displayName: 'Deploy Manifests to AKS'
                inputs:
                  action: deploy
                  kubernetesServiceConnection: 'AKSConnection'
                  namespace: 'default'
                  manifests: |
                    k8s/backend-deployment.yaml
                    k8s/frontend-deployment.yaml
                    k8s/consumer-deployment.yaml
                  containers: |
                    $(acrName).azurecr.io/backend:$(imageTag)
                    $(acrName).azurecr.io/frontend:$(imageTag)
                    # Uncomment if consumer image is built and pushed
                    # $(acrName).azurecr.io/consumer:$(imageTag)
